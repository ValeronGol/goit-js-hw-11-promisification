{"version":3,"sources":["js/task-02.js"],"names":["users","name","active","toggleUserState","allUsers","userName","promise","Promise","resolve","reject","map","user","logger","updatedUsers","console","table","then"],"mappings":";AAKA,MAAMA,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGnBC,EAAkB,CAACC,EAAUC,KAM1BC,OALS,IAAIC,QAAQ,CAACC,EAASC,KACpCD,EACEJ,EAASM,IAAIC,GAASA,EAAKV,OAASI,EAAW,IAAKM,EAAMT,QAASS,EAAKT,QAAWS,OAMnFC,EAASC,GAAgBC,QAAQC,MAAMF,GAE7CC,QAAQC,MAAMf,GACdG,EAAgBH,EAAO,SAASgB,KAAKJ,GACrCT,EAAgBH,EAAO,QAAQgB,KAAKJ,GACpCT,EAAgBH,EAAO,QAAQgB,KAAKJ,GACpCT,EAAgBH,EAAO,OAAOgB,KAAKJ","file":"task-02.db685054.js","sourceRoot":"../src","sourcesContent":["// Перепиши функцию toggleUserState() так,\n// чтобы она не использовала callback - функцию callback,\n// а принимала всего два параметра allUsers и userName\n// и возвращала промис.\n\nconst users = [\n  { name: 'Mango', active: true },\n  { name: 'Poly', active: false },\n  { name: 'Ajax', active: true },\n  { name: 'Lux', active: false },\n];\n\nconst toggleUserState = (allUsers, userName) => {\n  const promise = new Promise((resolve, reject) => {\n    resolve(\n      allUsers.map(user => (user.name === userName ? { ...user, active: !user.active } : user)),\n    );\n  });\n  return promise;\n};\n\nconst logger = updatedUsers => console.table(updatedUsers);\n\nconsole.table(users);\ntoggleUserState(users, 'Mango').then(logger);\ntoggleUserState(users, 'Poly').then(logger);\ntoggleUserState(users, 'Ajax').then(logger);\ntoggleUserState(users, 'Lux').then(logger);\n"]}