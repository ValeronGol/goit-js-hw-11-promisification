{"version":3,"sources":["js/task-03.js"],"names":["randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","delay","promise","Promise","resolve","reject","setTimeout","id","time","logSuccess","console","log","logError","warn","amount","then","catch"],"mappings":";AAIA,MAAMA,EAA4B,CAACC,EAAKC,IAC/BC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAGhDK,EAAkBC,IAChBC,MAAAA,EAAQR,EAA0B,IAAK,KAatCS,OAZS,IAAIC,QAAQ,CAACC,EAASC,KACpCC,WAAW,KACUV,KAAKE,SAAW,GAGjCM,EAAQ,CAAEG,GAAIP,EAAYO,GAAIC,KAAMP,IAEpCI,EAAOL,EAAYO,KAEpBN,MAMDQ,EAAa,EAAGF,GAAAA,EAAIC,KAAAA,MACxBE,QAAQC,mBAAmBJ,kBAAmBC,QAG1CI,EAAWL,IACfG,QAAQG,qCAAqCN,+BAG/CR,EAAgB,CAAEQ,GAAI,GAAIO,OAAQ,MAAOC,KAAKN,GAAYO,MAAMJ,GAEhEb,EAAgB,CAAEQ,GAAI,GAAIO,OAAQ,MAAOC,KAAKN,GAAYO,MAAMJ,GAEhEb,EAAgB,CAAEQ,GAAI,GAAIO,OAAQ,KAAMC,KAAKN,GAAYO,MAAMJ,GAE/Db,EAAgB,CAAEQ,GAAI,GAAIO,OAAQ,MAAOC,KAAKN,GAAYO,MAAMJ","file":"task-03.2d907490.js","sourceRoot":"../src","sourcesContent":["// Перепиши функцию makeTransaction() так, чтобы она не\n// использовала callback - функции onSuccess и onError,\n// а принимала всего один параметр transaction и возвращала промис.\n\nconst randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = transaction => {\n  const delay = randomIntegerFromInterval(200, 500);\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const canProcess = Math.random() > 0.3;\n\n      if (canProcess) {\n        resolve({ id: transaction.id, time: delay });\n      } else {\n        reject(transaction.id);\n      }\n    }, delay);\n  });\n\n  return promise;\n};\n\nconst logSuccess = ({ id, time }) => {\n  console.log(`Transaction ${id} processed in ${time}ms`);\n};\n\nconst logError = id => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\nmakeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 }).then(logSuccess).catch(logError);\n"]}